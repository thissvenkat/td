
package com.ntj.controller;
import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import com.ntj.util.DBConnection;
import com.ntj.model.JewelleryCustomerModel;
import com.ntj.util.IdGenerator;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import java.sql.Statement;
@WebServlet("/JewelleryCustomerInfoController")
public class JewelleryCustomerInfoController extends HttpServlet {
	private static final long serialVersionUID = 1L;
	public JewelleryCustomerInfoController() {
		super();
	}
	protected void doGet(HttpServletRequest request, HttpServletResponse response)
		throws ServletException, IOException {
		doPost(request, response);
	}
	protected void doPost(HttpServletRequest request, HttpServletResponse response)
		throws ServletException, IOException {
		String salesItemCname = request.getParameter("salesItemCname");
		System.out.println(salesItemCname);
		PrintWriter out = response.getWriter();
		response.setContentType("text/html");
		response.setHeader("Cache-control", "no-cache, no-store");
		response.setHeader("Pragma", "no-cache");
		response.setHeader("Expires", "-1");
		response.setHeader("Access-Control-Allow-Origin", "*");
		response.setHeader("Access-Control-Allow-Methods", "POST");
		response.setHeader("Access-Control-Allow-Headers", "Content-Type");
		response.setHeader("Access-Control-Max-Age", "86400");
		Gson gson = new Gson();
		JsonObject myObj = new JsonObject();
		JewelleryCustomerModel jewelleryCustomerModel  = getInfo(salesItemCname);
		JsonElement jewelleryCustomerObj = gson.toJsonTree(jewelleryCustomerModel);
		if (jewelleryCustomerModel.getCustName()== null) {
			myObj.addProperty("success", false);
		}
		else {
			myObj.addProperty("success", true);
		}
		myObj.add("jewelleryCustomerModel", jewelleryCustomerObj);
		out.println(myObj.toString());
		out.close();
	}
	// Get Country Information
	private JewelleryCustomerModel getInfo(String salesItemCname) {
		JewelleryCustomerModel jewelleryCustomerModel = new JewelleryCustomerModel();
		IdGenerator idGenerator = new IdGenerator();
		Connection conn = null;
		PreparedStatement stmt = null;
		Statement stmt1 = null;
		String sql = null;
		String sql1 = null;
	 
		
		try { 
			
			conn = DBConnection.getDBConnection();
			sql = "select custCno,custName,custMobile,custMbal,custCbal,custMode from customer where custName= ?";
			sql1 = "select max(custCno) from customer";
			stmt1 = conn.createStatement();			
			ResultSet rs1 = stmt1.executeQuery(sql1); 
			while (rs1.next()) {  
			jewelleryCustomerModel.setCustCNoNext(idGenerator.getId(rs1.getString(1)));
			}
			
			stmt = conn.prepareStatement(sql); 
			stmt.setString(1, salesItemCname.trim());
			ResultSet rs = stmt.executeQuery();
			
			while (rs.next()) {  
				jewelleryCustomerModel.setCustCNo(rs.getString(1).trim());
				jewelleryCustomerModel.setCustName(rs.getString(2).trim());
				jewelleryCustomerModel.setCustMobile(rs.getString(3).trim());
				jewelleryCustomerModel.setCustMbal(rs.getString(4).trim());
				jewelleryCustomerModel.setCustCbal(rs.getString(5).trim());
				jewelleryCustomerModel.setCustMode(rs.getString(6).trim());
				
				
			}
			rs.close();
			
			stmt.close();
			stmt = null;
			conn.close();
			DBConnection.disconnect();
			conn = null;
		}
		catch (Exception e) {
		System.out.println(e);
	}
		finally {
			if (stmt != null) {
				try {
					stmt.close();
				} catch (SQLException sqlex) {
					// ignore -- as we can't do anything about it here
				}
				stmt = null;
			}
			if (conn != null) {
				try {
					conn.close();
				} catch (SQLException sqlex) {
					// ignore -- as we can't do anything about it here
				}
				conn = null;
			}
		}
		return jewelleryCustomerModel;
	}
}
