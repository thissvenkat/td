package com.ntj.db;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.HashMap;

import com.ntj.model.JewelleryInvoiceCustomerModel;
import com.ntj.util.DBConnection;
import com.ntj.util.IdGenerator;

public class JewelleryInvoiceCustomerDB {
	Connection connection = DBConnection.getDBConnection();
	public Statement statement = null;
	public ResultSet resultSet = null;
	public PreparedStatement preparedStatement = null;
	IdGenerator idGenerator = new IdGenerator();
	JewelleryInvoiceCustomerModel jewelleryInvoiceCustomerModel = new JewelleryInvoiceCustomerModel();
	
	String jewellery_invoice_customer_insert = "insert into jewellery_invoice_customer(invoiceCBillNo,invoiceCDate,invoiceCHSNCode,invoiceCName,invoiceCMobile,invoiceCAddress1,invoiceCAddress2,invoiceCAddress3,invoiceCGST,invoiceCSNo1,invoiceCParticular1,invoiceCWeight1,invoiceCLess1,invoiceCGWeight1,invoiceCWastage1,invoiceCNWeight1,invoiceCRate1,invoiceCAmount1,invoiceCSNo2,invoiceCParticular2,invoiceCWeight2,invoiceCLess2,invoiceCGWeight2,invoiceCWastage2,invoiceCNWeight2,invoiceCRate2,invoiceCAmount2,invoiceCSNo3,invoiceCParticular3,invoiceCWeight3,invoiceCLess3,invoiceCGWeight3,invoiceCWastage3,invoiceCNWeight3,invoiceCRate3,invoiceCAmount3,invoiceCSNo4,invoiceCParticular4,invoiceCWeight4,invoiceCLess4,invoiceCGWeight4,invoiceCWastage4,invoiceCNWeight4,invoiceCRate4,invoiceCAmount4,invoiceCHMCharges,invoiceCSubTotal,invoiceCSGST,invoiceCCGST,invoiceCRoundOff,invoiceCTotal,invoiceCPayMode,invoiceCMode,invoiceCTime)values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,'OLD',now())";
	String jewellery_invoice_customer_update = "UPDATE jewellery_invoice_customer SET  invoiceCBillNo=?,invoiceCDate=?,invoiceCHSNCode=?,invoiceCName=?,invoiceCMobile=?,invoiceCAddress1=?,invoiceCAddress2=?,invoiceCAddress3=?,invoiceCGST=?,invoiceCSNo1=?,invoiceCParticular1=?,invoiceCWeight1=?,invoiceCLess1=?,invoiceCGWeight1=?,invoiceCWastage1=?,invoiceCNWeight1=?,invoiceCRate1=?,invoiceCAmount1=?,invoiceCSNo2=?,invoiceCParticular2=?,invoiceCWeight2=?,invoiceCLess2=?,invoiceCGWeight2=?,invoiceCWastage2=?,invoiceCNWeight2=?,invoiceCRate2=?,invoiceCAmount2=?,invoiceCSNo3=?,invoiceCParticular3=?,invoiceCWeight3=?,invoiceCLess3=?,invoiceCGWeight3=?,invoiceCWastage3=?,invoiceCNWeight3=?,invoiceCRate3=?,invoiceCAmount3=?,invoiceCSNo4=?,invoiceCParticular4=?,invoiceCWeight4=?,invoiceCLess4=?,invoiceCGWeight4=?,invoiceCWastage4=?,invoiceCNWeight4=?,invoiceCRate4=?,invoiceCAmount4=?,invoiceCHMCharges=?,invoiceCSubTotal=?,invoiceCSGST=?,invoiceCCGST=?,invoiceCRoundOff=?,invoiceCTotal=?,invoiceCPayMode=?,invoiceCTime=now() WHERE invoiceCBillNo='";
	String jewellery_invoice_customer_editSearchPrint = "select invoiceCBillNo,invoiceCDate,invoiceCHSNCode,invoiceCName,invoiceCMobile,invoiceCAddress1,invoiceCAddress2,invoiceCAddress3,invoiceCGST,invoiceCSNo1,invoiceCParticular1,invoiceCWeight1,invoiceCLess1,invoiceCGWeight1,invoiceCWastage1,invoiceCNWeight1,invoiceCRate1,invoiceCAmount1,invoiceCSNo2,invoiceCParticular2,invoiceCWeight2,invoiceCLess2,invoiceCGWeight2,invoiceCWastage2,invoiceCNWeight2,invoiceCRate2,invoiceCAmount2,invoiceCSNo3,invoiceCParticular3,invoiceCWeight3,invoiceCLess3,invoiceCGWeight3,invoiceCWastage3,invoiceCNWeight3,invoiceCRate3,invoiceCAmount3,invoiceCSNo4,invoiceCParticular4,invoiceCWeight4,invoiceCLess4,invoiceCGWeight4,invoiceCWastage4,invoiceCNWeight4,invoiceCRate4,invoiceCAmount4,invoiceCHMCharges,invoiceCSubTotal,invoiceCSGST,invoiceCCGST,invoiceCRoundOff,invoiceCTotal,invoiceCPayMode,invoiceCMode,invoiceCTime from jewellery_invoice_customer";	
	String jewellery_invoice_customer_CBno = "select max(invoiceCBillNo) from jewellery_invoice_customer";
	String jewellery_invoice_customer_delete = "delete from jewellery_invoice_customer where invoiceCBillNo='"; 

	public boolean getJewelleryInvoiceCustomerInsertUpdate(JewelleryInvoiceCustomerModel jewelleryInvoiceCustomerModel) {
		try {
			
			if (jewelleryInvoiceCustomerModel.getInvoiceCMode().equalsIgnoreCase("NEW")) {
				preparedStatement = connection.prepareStatement(jewellery_invoice_customer_insert);
			
			} else {
				preparedStatement = connection.prepareStatement(jewellery_invoice_customer_update + jewelleryInvoiceCustomerModel.getInvoiceCBillNo()+"'");
			
			}
			preparedStatement.setString(1, jewelleryInvoiceCustomerModel.getInvoiceCBillNo());
			preparedStatement.setString(2, jewelleryInvoiceCustomerModel.getInvoiceCDate());
			preparedStatement.setString(3, jewelleryInvoiceCustomerModel.getInvoiceCHSNCode());
			preparedStatement.setString(4, jewelleryInvoiceCustomerModel.getInvoiceCName());
			preparedStatement.setString(5, jewelleryInvoiceCustomerModel.getInvoiceCMobile());
			preparedStatement.setString(6, jewelleryInvoiceCustomerModel.getInvoiceCAddress1());
			preparedStatement.setString(7, jewelleryInvoiceCustomerModel.getInvoiceCAddress2());
			preparedStatement.setString(8, jewelleryInvoiceCustomerModel.getInvoiceCAddress3());
			preparedStatement.setString(9, jewelleryInvoiceCustomerModel.getInvoiceCGST());
			
			preparedStatement.setString(10, jewelleryInvoiceCustomerModel.getInvoiceCSNo1());
			preparedStatement.setString(11, jewelleryInvoiceCustomerModel.getInvoiceCParticular1());
			preparedStatement.setString(12, jewelleryInvoiceCustomerModel.getInvoiceCWeight1());
			preparedStatement.setString(13, jewelleryInvoiceCustomerModel.getInvoiceCLess1());
			preparedStatement.setString(14, jewelleryInvoiceCustomerModel.getInvoiceCGWeight1());
			preparedStatement.setString(15, jewelleryInvoiceCustomerModel.getInvoiceCWastage1());
			preparedStatement.setString(16, jewelleryInvoiceCustomerModel.getInvoiceCNWeight1());
			preparedStatement.setString(17, jewelleryInvoiceCustomerModel.getInvoiceCRate1());
			preparedStatement.setString(18, jewelleryInvoiceCustomerModel.getInvoiceCAmount1());
			
			preparedStatement.setString(19, jewelleryInvoiceCustomerModel.getInvoiceCSNo2());
			preparedStatement.setString(20, jewelleryInvoiceCustomerModel.getInvoiceCParticular2());
			preparedStatement.setString(21, jewelleryInvoiceCustomerModel.getInvoiceCWeight2());
			preparedStatement.setString(22, jewelleryInvoiceCustomerModel.getInvoiceCLess2());
			preparedStatement.setString(23, jewelleryInvoiceCustomerModel.getInvoiceCGWeight2());
			preparedStatement.setString(24, jewelleryInvoiceCustomerModel.getInvoiceCWastage2());
			preparedStatement.setString(25, jewelleryInvoiceCustomerModel.getInvoiceCNWeight2());
			preparedStatement.setString(26, jewelleryInvoiceCustomerModel.getInvoiceCRate2());
			preparedStatement.setString(27, jewelleryInvoiceCustomerModel.getInvoiceCAmount2());
			
			preparedStatement.setString(28, jewelleryInvoiceCustomerModel.getInvoiceCSNo3());
			preparedStatement.setString(29, jewelleryInvoiceCustomerModel.getInvoiceCParticular3());
			preparedStatement.setString(30, jewelleryInvoiceCustomerModel.getInvoiceCWeight3());
			preparedStatement.setString(31, jewelleryInvoiceCustomerModel.getInvoiceCLess3());
			preparedStatement.setString(32, jewelleryInvoiceCustomerModel.getInvoiceCGWeight3());
			preparedStatement.setString(33, jewelleryInvoiceCustomerModel.getInvoiceCWastage3());
			preparedStatement.setString(34, jewelleryInvoiceCustomerModel.getInvoiceCNWeight3());
			preparedStatement.setString(35, jewelleryInvoiceCustomerModel.getInvoiceCRate3());
			preparedStatement.setString(36, jewelleryInvoiceCustomerModel.getInvoiceCAmount3());
			
			preparedStatement.setString(37, jewelleryInvoiceCustomerModel.getInvoiceCSNo4());
			preparedStatement.setString(38, jewelleryInvoiceCustomerModel.getInvoiceCParticular4());
			preparedStatement.setString(39, jewelleryInvoiceCustomerModel.getInvoiceCWeight4());
			preparedStatement.setString(40, jewelleryInvoiceCustomerModel.getInvoiceCLess4());
			preparedStatement.setString(41, jewelleryInvoiceCustomerModel.getInvoiceCGWeight4());
			preparedStatement.setString(42, jewelleryInvoiceCustomerModel.getInvoiceCWastage4());
			preparedStatement.setString(43, jewelleryInvoiceCustomerModel.getInvoiceCNWeight4());
			preparedStatement.setString(44, jewelleryInvoiceCustomerModel.getInvoiceCRate4());
			preparedStatement.setString(45, jewelleryInvoiceCustomerModel.getInvoiceCAmount4());
			
			preparedStatement.setString(46, jewelleryInvoiceCustomerModel.getInvoiceCHMCharges());
			preparedStatement.setString(47, jewelleryInvoiceCustomerModel.getInvoiceCSubTotal());
			preparedStatement.setString(48, jewelleryInvoiceCustomerModel.getInvoiceCSGST());
			preparedStatement.setString(49, jewelleryInvoiceCustomerModel.getInvoiceCCGST());
			preparedStatement.setString(50, jewelleryInvoiceCustomerModel.getInvoiceCRoundOff());
			preparedStatement.setString(51, jewelleryInvoiceCustomerModel.getInvoiceCTotal());
			preparedStatement.setString(52, jewelleryInvoiceCustomerModel.getInvoiceCPayMode());
						
			preparedStatement.executeUpdate(); 

		} catch (SQLException e) { 

			// TODO Auto-generated catch block

			e.printStackTrace();

		}

		return true;

	}

	public JewelleryInvoiceCustomerModel getJewelleryInvoiceCustomerCBillNo() {

		try {
			statement = connection.createStatement();

			resultSet = statement.executeQuery(jewellery_invoice_customer_CBno);
			while (resultSet.next()) {
			
				
				jewelleryInvoiceCustomerModel = new JewelleryInvoiceCustomerModel(idGenerator.getId(resultSet.getString(1)).toString(),"","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","NEW","");
			}
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block 
			e.printStackTrace(); 
		} 
		return jewelleryInvoiceCustomerModel;

	} 
	public JewelleryInvoiceCustomerModel getJewelleryInvoiceCustomerEditSearchPrint(JewelleryInvoiceCustomerModel jewelleryInvoiceCustomerModel) {

		try { 

			statement = connection.createStatement();

			resultSet = statement.executeQuery(jewellery_invoice_customer_editSearchPrint+" where invoiceCBillNo='"+jewelleryInvoiceCustomerModel.getInvoiceCBillNo()+"' order by invoiceCBillNo asc");

			while (resultSet.next()) {
 
				jewelleryInvoiceCustomerModel = new JewelleryInvoiceCustomerModel(
						resultSet.getString(1),	resultSet.getString(2),	resultSet.getString(3),	resultSet.getString(4),	resultSet.getString(5),	resultSet.getString(6),	resultSet.getString(7),	resultSet.getString(8),	resultSet.getString(9),	resultSet.getString(10),
						resultSet.getString(11),resultSet.getString(12),resultSet.getString(13),resultSet.getString(14),resultSet.getString(15),resultSet.getString(16),resultSet.getString(17),resultSet.getString(18),resultSet.getString(19),resultSet.getString(20),
						resultSet.getString(21),resultSet.getString(22),resultSet.getString(23),resultSet.getString(24),resultSet.getString(25),resultSet.getString(26),resultSet.getString(27),resultSet.getString(28),resultSet.getString(29),resultSet.getString(30),
						resultSet.getString(31),resultSet.getString(32),resultSet.getString(33),resultSet.getString(34),resultSet.getString(35),resultSet.getString(36),resultSet.getString(37),resultSet.getString(38),resultSet.getString(39),resultSet.getString(40),
						resultSet.getString(41),resultSet.getString(42),resultSet.getString(43),resultSet.getString(44),resultSet.getString(45),resultSet.getString(46),resultSet.getString(47),resultSet.getString(48),resultSet.getString(49),resultSet.getString(50),
						resultSet.getString(51),resultSet.getString(52),resultSet.getString(53),resultSet.getString(54));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return jewelleryInvoiceCustomerModel;
	}
	
	public HashMap<Integer, JewelleryInvoiceCustomerModel> getJewelleryInvoiceCustomerAllData() {
		HashMap<Integer, JewelleryInvoiceCustomerModel> jewelleryInvoiceCustomerModelMap = new HashMap<Integer, JewelleryInvoiceCustomerModel>();
		try {
			statement = connection.createStatement();
			int flagValue = 0;
			resultSet = statement.executeQuery(jewellery_invoice_customer_editSearchPrint+" order by invoiceCDate desc");
			while (resultSet.next()) {
				flagValue++;
				jewelleryInvoiceCustomerModelMap.put(flagValue, new JewelleryInvoiceCustomerModel(
						resultSet.getString(1),	resultSet.getString(2),	resultSet.getString(3),	resultSet.getString(4),	resultSet.getString(5),	resultSet.getString(6),	resultSet.getString(7),	resultSet.getString(8),	resultSet.getString(9),	resultSet.getString(10),
						resultSet.getString(11),resultSet.getString(12),resultSet.getString(13),resultSet.getString(14),resultSet.getString(15),resultSet.getString(16),resultSet.getString(17),resultSet.getString(18),resultSet.getString(19),resultSet.getString(20),
						resultSet.getString(21),resultSet.getString(22),resultSet.getString(23),resultSet.getString(24),resultSet.getString(25),resultSet.getString(26),resultSet.getString(27),resultSet.getString(28),resultSet.getString(29),resultSet.getString(30),
						resultSet.getString(31),resultSet.getString(32),resultSet.getString(33),resultSet.getString(34),resultSet.getString(35),resultSet.getString(36),resultSet.getString(37),resultSet.getString(38),resultSet.getString(39),resultSet.getString(40),
						resultSet.getString(41),resultSet.getString(42),resultSet.getString(43),resultSet.getString(44),resultSet.getString(45),resultSet.getString(46),resultSet.getString(47),resultSet.getString(48),resultSet.getString(49),resultSet.getString(50),
						resultSet.getString(51),resultSet.getString(52),resultSet.getString(53),resultSet.getString(54)));

			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return jewelleryInvoiceCustomerModelMap;
	}
	  
	public boolean getJewelleryInvoiceCustomerCBNoDelete(JewelleryInvoiceCustomerModel jewelleryInvoiceCustomerModel) {
		try {
			preparedStatement = connection.prepareStatement(jewellery_invoice_customer_delete+ jewelleryInvoiceCustomerModel.getInvoiceCBillNo()+"'");
			preparedStatement.execute();
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return true;
	}
}
